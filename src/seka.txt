1. pasikuriam nauja projekta prisidedam git + github
bent vienas modulinis js failas su kazkokiu funkciionalumu + index.js

2. Inicializuoti npm. 
npm init

3. Instaliuojam webpack
 npm install webpack webpack-cli --save-dev

4. git ingonre  for node modules ir dist

5. pridedam webpack configuracijos faila webpack.dev.js
pakeiciam scripta kad start scriptas paleidzia dev konfiguracija
"start": "webpack --config webpack.dev.js"

6. Html generavimo plugin
https://webpack.js.org/plugins/html-webpack-plugin/
inicijuojam plugina confige ir nurodom jam naudoti musu template.html

7. CSS 
https://webpack.js.org/guides/asset-management/#loading-css
npm install --save-dev style-loader css-loader
pridejom taisykle kad .css failam naudoti css loader

8. Babel
https://webpack.js.org/loaders/babel-loader/
npm install -D babel-loader @babel/core @babel/preset-env

devtool: "source-map", // galima matyti is kurio failo koks kodas atejo


9. Dev Server
https://webpack.js.org/configuration/dev-server/#root
npm install --save-dev webpack-dev-server
scripte prirasyti 'serve' 
pasidarom kad 'npm run serve' paleistu localu serveri darbui


10. IMG
https://webpack.js.org/guides/asset-management/#loading-images



IMG compress

Css minimize




// post css plugin - kad pridetu reikalingus webkit pagal narsyle ir versija
npm install --save-dev postcss postcss-loader postcss-preset-env


.browserslistrc
last 2 versions //imam paskutines 2 narsykliu versijas
> 0.5% // bandom palaikyti 99.5% narsykliu 
IE 9 // bandom prideti palaikyma internet explorer 9

